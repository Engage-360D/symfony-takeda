/**
 * @author Vyacheslav Slinko <vslinko@yahoo.com>
 */

var FormMixin = {
  getInitialState: function() {
    return {
      formState: this.getInitialFormState()
    };
  },

  isFormInvalid: function() {
    return this.state.formState.validity.invalid;
  },

  isFieldInvalid: function(key) {
    if (!this.state.formState.validity[key]) {
      return false;
    }

    return this.state.formState.validity[key].invalid;
  },

  isFieldErrorVisible: function(key) {
    return this.isFieldInvalid(key) &&
      this.state.formState.changed.indexOf(key) >= 0 &&
      this.state.formState.blured.indexOf(key) >= 0;
  },

  getFieldErrorMessage: function(key) {
    return this.state.formState.validity[key].message;
  },

  linkForm: function(key, callback) {
    return {
      value: this.state.formState.data[key],
      requestChange: function(value) {
        var changes = {};
        changes[key] = {$set: value};

        var formState = this.state.formState.update(changes);

        if (callback) {
          formState = callback(value, formState);
        }

        this.setState({
          formState: formState
        });
      }.bind(this)
    };
  },

  formBlurMaker: function(key) {
    return function() {
      this.setState({
        formState: this.state.formState.markBlured(key)
      });
    }.bind(this);
  }
};

module.exports = FormMixin;
