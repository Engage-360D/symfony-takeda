/**
 * @author Vyacheslav Slinko <vslinko@yahoo.com>
 */

var update = require('react/lib/update');

function updateChanges(formState, changes, prefix) {
  Object.keys(changes).forEach(function(key) {
    if (key[0] === '$') {
      return;
    } else {
      var prefixedKey = prefix ? [prefix, key].join('.') : key;
      if (formState.changed.indexOf(prefixedKey) < 0) {
        formState.changed.push(prefixedKey);
      }
      updateChanges(formState, changes[key], prefixedKey);
    }
  });
}

function createForm(formValidator) {
  return function form(data) {
    var formState = {};

    function updateForm(changes) {
      var newFormState = form(update(formState.data, changes));

      newFormState.changed = formState.changed.concat();
      newFormState.blured = formState.blured.concat();
      updateChanges(newFormState, changes, '');

      return newFormState;
    }

    function markBlured(key) {
      var newFormState = form(formState.data);

      newFormState.changed = formState.changed.concat();
      newFormState.blured = formState.blured.concat();
      if (newFormState.blured.indexOf(key) < 0) {
        newFormState.blured = newFormState.blured.concat([key]);
      }

      return newFormState;
    }

    function markAll() {
      var newFormState = form(formState.data);

      newFormState.changed = Object.keys(formState.data);
      newFormState.blured = Object.keys(formState.data);

      return newFormState;
    }

    formState.data = data;
    formState.validity = formValidator(data);
    formState.changed = [];
    formState.blured = [];
    formState.update = updateForm;
    formState.markBlured = markBlured;
    formState.markAll = markAll;

    return formState;
  };
}

module.exports = createForm;
