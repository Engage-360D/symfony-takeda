imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    #translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: false
    validation:      { enable_annotations: true, enabled: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:         ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

sensio_framework_extra:
    view: { annotations: false }

jms_security_extra:
    secure_all_services: false
    expressions: true

# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: %kernel.debug%
    variables:
        locale: [en, ru]

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: "%kernel.root_dir%/data/data.db3"
        # path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true

stof_doctrine_extensions:
    orm:
        default:
            sluggable:   true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

nelmio_api_doc: ~

jms_serializer:
    metadata:
        auto_detection: true
        directories:            
            FOSUB:
                namespace_prefix: FOS\UserBundle
                path: @Engage360dSecurityBundle/Resources/config/serializer/fos
    property_naming:
        separator:  ~
        lower_case: false

fos_rest:
    param_fetcher_listener: force
    view:
        view_response_listener: force
        jsonp_handler: ~
    serializer:
        serialize_null: true
    routing_loader:
        default_format: json
        include_format: false
    format_listener:
      rules:
        - { path: '^/api', priorities: ['json'] }
        - { path: '^/', priorities: ['html'] }

fos_oauth_server:
    service:
        user_provider: engage360d_security.manager.user
    db_driver: orm
    client_class:        Engage360d\Bundle\TakedaUserBundle\Entity\OAuth\Client
    access_token_class:  Engage360d\Bundle\TakedaUserBundle\Entity\OAuth\AccessToken
    refresh_token_class: Engage360d\Bundle\TakedaUserBundle\Entity\OAuth\RefreshToken
    auth_code_class:     Engage360d\Bundle\TakedaUserBundle\Entity\OAuth\AuthCode

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: Engage360d\Bundle\TakedaUserBundle\Entity\User\User

hwi_oauth:
    connect: true
    firewall_name: main
    target_path_parameter: _target_path
    resource_owners:
        facebook:
            type:                facebook
            client_id:           "%facebook_client_id%"
            client_secret:       "%facebook_client_secret%"
            options:
                display: popup
        vkontakte:
            type:                vkontakte
            client_id:           "%vkontakte_client_id%"
            client_secret:       "%vkontakte_client_secret%"

fos_elastica:
    clients:
        default: { host: localhost, port: 9200 }
    indexes:
        website:
            client: default
            types:
                test:
                    mappings:
                        firstname: ~
                        lastname: ~
                    persistence:
                        driver: orm
                        model: Engage360d\Bundle\TakedaUserBundle\Entity\User\User
                        provider: ~
                        listener:
                            insert: true
                            update: true
                            delete: true
